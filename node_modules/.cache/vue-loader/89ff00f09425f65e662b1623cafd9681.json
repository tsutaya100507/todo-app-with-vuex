{"remainingRequest":"/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/src/App.vue","mtime":1544799599000},{"path":"/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  // 入力中のタスク名はこのコンポーネントのみで使う。\n  data () {\n    return {\n      newTaskName: '',\n      newTaskLabelIds: [],\n      newLabelText: '',\n    }\n  },\n  computed: {\n    tasks () {\n      return this.$store.getters.filteredTasks\n    },\n    labels () {\n      return this.$store.state.labels\n    },\n    filter () {\n      return this.$store.state.filter\n    }\n  },\n  methods: {\n    addTask () {\n      this.$store.commit('addTask', {\n        name: this.newTaskName,\n        labelIds: this.newTaskLabelIds\n      })\n      this.newTaskName =''\n      this.newTaskLabelIds = []\n    },\n    toggleTaskStatus (task) {\n      this.$store.commit('toggleTaskStatus', {\n        id: task.id\n      })\n    },\n    addLabel () {\n      this.$store.commit('addLabel', {\n        text: this.newLabelText\n      })\n      this.newLabelText = ''\n    },\n    getLabelText (id) {\n      const label = this.labels.filter(label => label.id === id)[0]\n      return label ? label.text:''\n    },\n    changeFilter (labelId) {\n      this.$store.commit('changeFilter', {\n        filter: labelId\n      })\n    },\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div>\n    <h2>タスク一覧</h2>\n    <ul>\n      <li v-for=\"task in tasks\" v-bind:key=\"task.id\">\n        <input type=\"checkbox\" v-bind:checked=\"task.done\" v-on:change=\"toggleTaskStatus(task)\">\n        {{ task.name }}\n        <span v-for=\"id in task.labelIds\" v-bind:key=\"id\">\n          {{ getLabelText(id) }}\n        </span>\n      </li>\n    </ul>\n    <form v-on:submit.prevent=\"addTask\">\n      <input type=\"text\" v-model=\"newTaskName\" placeholder=\"新しいタスク\">\n    </form>\n\n    <h2>ラベル一覧</h2>\n    <ul>\n      <li v-for=\"label in labels\" v-bind:key=\"label.id\">\n        <input type=\"checkbox\" v-bind:value=\"label.id\" v-model=\"newTaskLabelIds\">\n        {{ label.text }}\n      </li>\n    </ul>\n\n    <form v-on:submit.prevent=\"addLabel\">\n      <input type=\"text\" v-model=\"newLabelText\" placeholder=\"新しいラベル\">\n    </form>\n\n    <h2>ラベルでフィルタ</h2>\n    <ul>\n      <li v-for=\"label in labels\" v-bind:key=\"label.id\">\n        <input type=\"radio\" v-bind:checked=\"label.id === filter\" v-on:change=\"changeFilter(label.id)\">\n        {{ label.text }}\n      </li>\n      <li>\n        <input type=\"radio\" v-bind:checked=\"filter === null\" v-on:change=\"changeFilter(null)\">\n        フィルタしない\n      </li>\n    </ul>\n\n    <h2>保存と復元</h2>\n    <button type=\"button\" v-on:click=\"save\">保存</button>\n    <button type=\"button\" v-on:click=\"restore\">復元</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  // 入力中のタスク名はこのコンポーネントのみで使う。\n  data () {\n    return {\n      newTaskName: '',\n      newTaskLabelIds: [],\n      newLabelText: '',\n    }\n  },\n  computed: {\n    tasks () {\n      return this.$store.getters.filteredTasks\n    },\n    labels () {\n      return this.$store.state.labels\n    },\n    filter () {\n      return this.$store.state.filter\n    }\n  },\n  methods: {\n    addTask () {\n      this.$store.commit('addTask', {\n        name: this.newTaskName,\n        labelIds: this.newTaskLabelIds\n      })\n      this.newTaskName =''\n      this.newTaskLabelIds = []\n    },\n    toggleTaskStatus (task) {\n      this.$store.commit('toggleTaskStatus', {\n        id: task.id\n      })\n    },\n    addLabel () {\n      this.$store.commit('addLabel', {\n        text: this.newLabelText\n      })\n      this.newLabelText = ''\n    },\n    getLabelText (id) {\n      const label = this.labels.filter(label => label.id === id)[0]\n      return label ? label.text:''\n    },\n    changeFilter (labelId) {\n      this.$store.commit('changeFilter', {\n        filter: labelId\n      })\n    },\n  }\n}\n</script>\n"]}]}
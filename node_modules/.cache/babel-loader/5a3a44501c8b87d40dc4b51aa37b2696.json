{"remainingRequest":"/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/node_modules/babel-loader/lib/index.js!/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/src/store.js","dependencies":[{"path":"/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/src/store.js","mtime":1544799417000},{"path":"/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/package.json","mtime":1544771413000},{"path":"/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  // データを保持\n  state: {\n    tasks: [{\n      id: 1,\n      name: '牛乳を買う',\n      labelIds: [1, 2],\n      done: false\n    }, {\n      id: 2,\n      name: 'Vue.jsの本を買う',\n      labelIds: [1, 3],\n      done: true\n    }],\n    labels: [{\n      id: 1,\n      text: '買い物'\n    }, {\n      id: 2,\n      text: '食料'\n    }, {\n      id: 3,\n      text: '本'\n    }],\n    nextTaskId: 3,\n    nextLabelId: 4,\n    filter: null\n  },\n  // ステートから計算された値を返す。computedのように使う。\n  getters: {\n    filteredTasks: function filteredTasks(state) {\n      if (!state.filter) {\n        return state.tasks;\n      }\n\n      return state.tasks.filter(function (task) {\n        return task.labelIds.indexOf(state.filter) >= 0;\n      });\n    }\n  },\n  // stateを更新\n  mutations: {\n    addTask: function addTask(state, _ref) {\n      var name = _ref.name,\n          labelIds = _ref.labelIds;\n      state.tasks.push({\n        id: state.nextTaskId,\n        name: name,\n        labelIds: labelIds,\n        done: false\n      });\n      state.nextTaskId++;\n    },\n    toggleTaskStatus: function toggleTaskStatus(state, _ref2) {\n      var id = _ref2.id;\n      var filterd = state.tasks.filter(function (task) {\n        return task.id === id;\n      });\n      filterd.forEach(function (task) {\n        task.done = !task.done;\n      });\n    },\n    addLabel: function addLabel(state, _ref3) {\n      var text = _ref3.text;\n      state.labels.push({\n        id: state.nextLabelId,\n        text: text\n      });\n      state.nextLabelId++;\n    },\n    changeFilter: function changeFilter(state, _ref4) {\n      var filter = _ref4.filter;\n      state.filter = filter;\n    },\n    restore: function restore(state, _ref5) {\n      var tasks = _ref5.tasks,\n          labels = _ref5.labels,\n          nextTaskId = _ref5.nextTaskId,\n          nextLabelId = _ref5.nextLabelId;\n      state.tasks = tasks;\n      state.labels = labels;\n      state.nextTaskId = nextTaskId;\n      state.nextLabelId = nextLabelId;\n    }\n  },\n  actions: {\n    save: function save(_ref6) {\n      var state = _ref6.state;\n      var data = {\n        tasks: state.tasks,\n        labels: state.labels,\n        nextTaskId: state.nextTaskId,\n        nextLabelId: state.nextLabelId\n      };\n      localStorage.setItem('task-app-data', JSON.stringify(data));\n    },\n    restore: function restore(_ref7) {\n      var commit = _ref7.commit;\n      var data = localStorage.getItem('task-app-data');\n\n      if (data) {\n        commit('restore', JSON.parse(data));\n      }\n    }\n  }\n});\nexport default store;",{"version":3,"sources":["/Users/tatsuyaichikawa/projects/06 Vuejs/todo-app-with-vuex/src/store.js"],"names":["Vue","Vuex","use","store","Store","state","tasks","id","name","labelIds","done","labels","text","nextTaskId","nextLabelId","filter","getters","filteredTasks","task","indexOf","mutations","addTask","push","toggleTaskStatus","filterd","forEach","addLabel","changeFilter","restore","actions","save","data","localStorage","setItem","JSON","stringify","commit","getItem","parse"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n  // データを保持\n  state: {\n    tasks: [\n      {\n        id: 1,\n        name: '牛乳を買う',\n        labelIds: [1, 2],\n        done: false,\n      },\n      {\n        id: 2,\n        name: 'Vue.jsの本を買う',\n        labelIds: [1, 3],\n        done: true,\n      }\n    ],\n\n    labels: [\n      {\n        id: 1,\n        text: '買い物'\n      },\n      {\n        id: 2,\n        text: '食料'\n      },\n      {\n        id: 3,\n        text: '本'\n      }\n    ],\n    nextTaskId: 3,\n    nextLabelId: 4,\n    filter: null\n  },\n  // ステートから計算された値を返す。computedのように使う。\n  getters: {\n    filteredTasks (state) {\n      if (!state.filter) {\n        return state.tasks\n      }\n      return state.tasks.filter(task => {\n        return task.labelIds.indexOf(state.filter) >= 0\n      })\n    }\n  },\n  // stateを更新\n  mutations: {\n    addTask (state, { name, labelIds }) {\n      state.tasks.push({\n        id: state.nextTaskId,\n        name,\n        labelIds,\n        done: false\n      })\n      state.nextTaskId++\n    },\n    toggleTaskStatus (state, { id }) {\n      const filterd = state.tasks.filter(task => {\n        return task.id === id\n      })\n      filterd.forEach(task => {\n        task.done = !task.done\n      })\n    },\n    addLabel (state, { text }) {\n      state.labels.push({\n        id: state.nextLabelId,\n        text\n      })\n      state.nextLabelId++\n    },\n    changeFilter (state, { filter }) {\n      state.filter = filter\n    },\n    restore (state, { tasks, labels, nextTaskId, nextLabelId }) {\n      state.tasks       = tasks\n      state.labels      = labels\n      state.nextTaskId  = nextTaskId\n      state.nextLabelId = nextLabelId\n    }\n  },\n  actions: {\n    save ({ state }) {\n      const data = {\n        tasks:       state.tasks,\n        labels:      state.labels,\n        nextTaskId:  state.nextTaskId,\n        nextLabelId: state.nextLabelId,\n      }\n      localStorage.setItem('task-app-data', JSON.stringify(data))\n    },\n\n    restore ({ commit }) {\n      const data = localStorage.getItem('task-app-data')\n        if (data) {\n          commit('restore', JSON.parse(data))\n        }\n    }\n  }\n})\n\nexport default store"]}]}